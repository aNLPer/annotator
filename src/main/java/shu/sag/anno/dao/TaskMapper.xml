<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shu.sag.anno.dao.TaskMapper">

    <insert id="addTask" parameterType="Task">
        insert into task (taskName,config,datasetID,datasetTableName,resultTableName,taskScope, startAnnoIndex, endAnnoIndex, creator, remark)
        values(#{taskName},#{config},#{datasetID},#{datasetTableName},#{resultTableName},#{taskScope},#{startAnnoIndex},#{endAnnoIndex},#{creator}, #{remark})
    </insert>

    <select id="getTaskByConfigID" parameterType="int" resultType="Task">
        select * from task where configID = #{configID}
    </select>

    <select id="getTaskNum" resultType="int">
        select count(*) from task
    </select>

    <select id="getAllTask" resultType="Task">
        select * from task limit #{currentIndex}, #{pageSize}
    </select>

    <update id="createResultTable" parameterType="String">
        create table if not exists ${resultTableName} (
            id INT(11) NOT NULL AUTO_INCREMENT,
            username varchar(255) NOT NULL COMMENT'用户账号',
            textID INT(11) NOT NULL COMMENT'数据id',
            text mediumtext NOT NULL COMMENT'标注数据',
            label text NOT NULL COMMENT'标注',
            rawTableName varchar(255) NOT NULL COMMENT'标注数据表',
            PRIMARY KEY (id)
        )ENGINE=INNODB DEFAULT CHARSET = utf8mb4;
    </update>

    <delete id="deleteTaskByID" parameterType="int">
        delete from task where id = #{id}
    </delete>


    <update id="updateTask" parameterType="task">
        update task
        set taskName=#{taskName},
            config=#{config},
            startAnnoIndex=#{startAnnoIndex},
            endAnnoIndex=#{endAnnoIndex},
            taskScope = #{taskScope}
        where id = #{id}
    </update>

    <update id="setTaskStatus">
        update task
        set taskStatus=#{status}
        where id=#{taskID}
    </update>

    <select id="getTaskByID" parameterType="int" resultType="Task">
        select * from task where id=#{taskid}
    </select>

    <select id="getTotalNum" parameterType="int" resultType="int">
        select endAnnoIndex-startAnnoIndex from task where id=#{id}
    </select>

    <select id="searchTask" resultType="Task">
        select * from task
        where creator=#{creator} and taskName like '%${searchValue}%'
        limit ${currentIndex},${pageSize}
    </select>

    <select id="getConfigByTaskID" resultType="String" parameterType="int">
        select config from task where id = #{taskid}
    </select>

    <select id="searchTaskResCount" resultType="int">
        select count(*) from task
        where creator=#{creator} and taskName like '%${searchValue}%'
    </select>

    <select id="searchPubTask" resultType="Task">
        select * from task where taskScope='1' and taskName like '%${searchValue}%' limit ${currentIndex},${pageSize}
    </select>

    <select id="searchPubTaskResCount" resultType="int">
        select count(*) from task where taskScope='1' and taskName like '%${searchValue}%'
    </select>

    <update id="setScopeByTaskID">
        update task
        set taskScope=#{scope}
        where id=#{taskid}
    </update>

    <select id="getTaskByDatasetID" resultType="int">
        select count(*) from task where datasetID=#{datasetid}
    </select>
</mapper>